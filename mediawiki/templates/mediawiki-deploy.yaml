apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deploy
  namespace: {{ .Values.k8s_ns.name }}
  labels:
    app: {{ .Release.Name }}-app
spec:
 selector:
  matchLabels:
   app: {{ .Release.Name }}-app
 replicas: {{ .Values.replica.count }}
 revisionHistoryLimit: 3
 template:
     metadata:
      labels:
       app: {{ .Release.Name }}-app
     spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: {{ .Values.nodeaffinity.key }}
                operator: In
                values:
                - "{{ .Values.nodeaffinity.value }}"
            weight: {{ .Values.nodeaffinity.weight }}
      initContainers:
      - name: {{ .Release.Name }}-create-wiki-user
        image: "{{ .Values.init.image }}:{{ .Values.init.tag }}"
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-mysql-sec
        command:
          - sh
          - -c
          - mysql -h mediawiki-mysql -P 3306 -u root -pM3d1Aw1KiDataa1L0wAccess027 < /tmp/wikiuser.sql
        volumeMounts:
        - name: {{ .Release.Name }}-mysql-vol
          readOnly: true
          mountPath: "/tmp/wikiuser.sql"
          subPath: wikiuser.sql
      containers:
      - name: {{ .Release.Name }}
        image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-mysql-sec
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - containerPort: {{ .Values.image.port.http }}
        - containerPort: {{ .Values.image.port.https }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.image.port.http }}
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: {{ .Values.image.port.http }}
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: {{ .Release.Name }}-persistent-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-pv-claim
      - name: {{ .Release.Name }}-mysql-vol
        configMap:
          name: {{ .Release.Name }}-wikiuser